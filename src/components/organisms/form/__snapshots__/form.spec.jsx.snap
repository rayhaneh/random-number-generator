// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Form Component renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Form
    max={50}
    min={0}
    onMaxChange={[MockFunction]}
    onMinChange={[MockFunction]}
    onSubmit={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="flex flex-row mb2"
        >
          <InputFieldWithLabel
            handleChange={[MockFunction]}
            label="Min"
            max={50}
            min=""
            value={0}
          />
          <InputFieldWithLabel
            handleChange={[MockFunction]}
            label="Max"
            max=""
            min={0}
            value={50}
          />
        </div>,
        <Button
          text="GENERATE"
        />,
      ],
      "className": "pa5 flex flex-column",
      "onSubmit": [MockFunction],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <InputFieldWithLabel
              handleChange={[MockFunction]}
              label="Min"
              max={50}
              min=""
              value={0}
            />,
            <InputFieldWithLabel
              handleChange={[MockFunction]}
              label="Max"
              max=""
              min={0}
              value={50}
            />,
          ],
          "className": "flex flex-row mb2",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "handleChange": [MockFunction],
              "label": "Min",
              "max": 50,
              "min": "",
              "value": 0,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "handleChange": [MockFunction],
              "label": "Max",
              "max": "",
              "min": 0,
              "value": 50,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "text": "GENERATE",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="flex flex-row mb2"
          >
            <InputFieldWithLabel
              handleChange={[MockFunction]}
              label="Min"
              max={50}
              min=""
              value={0}
            />
            <InputFieldWithLabel
              handleChange={[MockFunction]}
              label="Max"
              max=""
              min={0}
              value={50}
            />
          </div>,
          <Button
            text="GENERATE"
          />,
        ],
        "className": "pa5 flex flex-column",
        "onSubmit": [MockFunction],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <InputFieldWithLabel
                handleChange={[MockFunction]}
                label="Min"
                max={50}
                min=""
                value={0}
              />,
              <InputFieldWithLabel
                handleChange={[MockFunction]}
                label="Max"
                max=""
                min={0}
                value={50}
              />,
            ],
            "className": "flex flex-row mb2",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "handleChange": [MockFunction],
                "label": "Min",
                "max": 50,
                "min": "",
                "value": 0,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "handleChange": [MockFunction],
                "label": "Max",
                "max": "",
                "min": 0,
                "value": 50,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "text": "GENERATE",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "attachTo": undefined,
    "hydrateIn": undefined,
  },
}
`;
